DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS friends CASCADE;

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100)
);

CREATE TABLE IF NOT EXISTS users(
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(100) NOT NULL UNIQUE,
    name varchar(100) NOT NULL ,
    login varchar(100) NOT NULL UNIQUE,
    birthday date
);

CREATE TABLE IF NOT EXISTS films(
    film_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL ,
    description varchar(200) NOT NULL ,
    duration int NOT NULL ,
    release_date date,
    mpa_id int REFERENCES mpa(mpa_id)
);


CREATE TABLE IF NOT EXISTS genres(
    genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100)
);

CREATE TABLE IF NOT EXISTS film_genres(
    film_id int REFERENCES films(film_id) ON DELETE CASCADE ON UPDATE CASCADE,
    genre_id int REFERENCES genres(genre_id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (genre_id,film_id)
);

CREATE TABLE IF NOT EXISTS likes(
    film_id int REFERENCES films(film_id),
    user_id int REFERENCES users(user_id),
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS friends(
    user_id int REFERENCES users(user_id),
    friend_id int REFERENCES users(user_id)
);